{"ast":null,"code":"const re = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\nexport default (emails => {\n  const invalidEmails = emails.split(',').map(email => email.trim()).filter(email => re.test(email) === false);\n  if (invalidEmails.length) {\n    return `These emails are invalid: ${invalidEmails}`;\n  }\n  return;\n});","map":{"version":3,"names":["re","emails","invalidEmails","split","map","email","trim","filter","test","length"],"sources":["/Users/idong-won/Documents/PROJECT/Serice for Startup Owners/Automation_Service/client/src/utils/validateEmails.js"],"sourcesContent":["const re = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\nexport default emails => {\n  const invalidEmails = emails\n    .split(',')\n    .map(email => email.trim())\n    .filter(email => re.test(email) === false);\n\n  if (invalidEmails.length) {\n    return `These emails are invalid: ${invalidEmails}`;\n  }\n\n  return;\n};\n"],"mappings":"AAAA,MAAMA,EAAE,GAAG,sEAAsE;AAEjF,gBAAeC,MAAM,IAAI;EACvB,MAAMC,aAAa,GAAGD,MAAM,CACzBE,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,CAC1BC,MAAM,CAACF,KAAK,IAAIL,EAAE,CAACQ,IAAI,CAACH,KAAK,CAAC,KAAK,KAAK,CAAC;EAE5C,IAAIH,aAAa,CAACO,MAAM,EAAE;IACxB,OAAO,6BAA6BP,aAAa,EAAE;EACrD;EAEA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}